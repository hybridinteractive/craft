// Create a custom block grid
//
// $per-row - # of items to display per row. Default: false.
// $spacing - # of ems to use as padding on each block item. Default: rem-calc(20).
// $include-spacing - Adds padding to our list item. Default: true.
// $base-style - Apply a base style to block grid. Default: true.
@mixin block-grid(
  $per-row:false,
  $spacing:$block-grid-default-spacing,
  $spacing-vertical:$block-grid-default-spacing,
  $include-spacing:true,
  $base-style:true) {

  @if $base-style {
    display: block;
    padding: 0;
    @if $align-block-grid-to-grid {
      margin: 0;
    } @else {
      margin: 0 (-$spacing/2);
    }
    @include clearfix;

    &>li {
      display: block;
      height: auto;
      float: $default-float;
      @if $include-spacing {
        padding: 0 ($spacing/2) $spacing-vertical;
      }
    }
  }

  @if $per-row {
    &>li {
      width: 100%/$per-row;
      @if $include-spacing {
        padding: 0 ($spacing/2) $spacing-vertical;
      }
      list-style: none;

      &:nth-of-type(1n) { clear: none; }
      &:nth-of-type(#{$per-row}n+1) { clear: both; }
      @if $align-block-grid-to-grid {
        @include block-grid-aligned($per-row, $spacing);
      }
    }
  }
}



@mixin transition($property, $time) {
    -webkit-transition: $property $time ease-in-out;
    -moz-transition:    $property $time ease-in-out;
    -o-transition:      $property $time ease-in-out;
    transition:         $property $time ease-in-out;
}

@mixin radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
}

@mixin rotate3d($x, $y, $z, $angle) {
    -webkit-transform: rotate3d($x, $y, $z, $angle);
    transform:         rotate3d($x, $y, $z, $angle);
}

@mixin scale3d($x, $y, $z) {
    -webkit-transform: scale3d($x, $y, $z);
    transform:         scale3d($x, $y, $z);
}

@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z);
    transform:         translate3d($x, $y, $z);
}

@mixin skew($x, $y) {
    -ms-transform: skew($x,$y); /* IE 9 */
    -webkit-transform: skew($x,$y); /* Chrome, Safari, Opera */
    transform: skew($x,$y);
}

@mixin transform($all) {
    -ms-transform: $all !important; /* IE 9 */
    -webkit-transform: $all !important; /* Chrome, Safari, Opera */
    transform: $all !important;
}

@mixin transform-origin($point) {
    -ms-transform-origin: $point;
    -o-transform-origin: $point;
    -moz-transform-origin: $point;
    -webkit-transform-origin: $point;
    transform-origin: $point;
}

@mixin clip-path4($a, $b, $c, $d) {
    -webkit-clip-path: polygon($a, $b, $c, $d);
    -moz-clip-path:    polygon($a, $b, $c, $d);
    -ms-clip-path:     polygon($a, $b, $c, $d);
    clip-path:         polygon($a, $b, $c, $d);
}

@mixin clip-path5($a, $b, $c, $d, $e) {
    -webkit-clip-path: polygon($a, $b, $c, $d, $e);
    -moz-clip-path:    polygon($a, $b, $c, $d, $e);
    -ms-clip-path:     polygon($a, $b, $c, $d, $e);
    clip-path:         polygon($a, $b, $c, $d, $e);
}

@mixin abcenter() {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
}

@mixin before-block {
    display:block;
    content: "";
    position:absolute;
    left:0;
    top:0;
    width:100%;
    height:100%;
}

@mixin box-shadow($vars...) {
    -webkit-box-shadow: $vars;
    -moz-box-shadow:    $vars;
    box-shadow:         $vars;
}

@mixin black-gradient($fromColor:"rgba(0,0,0,0)", $toColor:"rgba(0,0,0,0.65)", $height:"100%", $width:"100%", $position:"relative", $startFrom:"to bottom") {
  position: #{$position};
    &:before {
        @include transition(all, 0.3s);
        display: block;
        content: " ";
        position: absolute;
        bottom: 0;
        left: 0;
        height: #{$height};
        width: #{$width};
        z-index: 0;

        // background-color:                                                                                             #{$toColor}; /* Fallback Color */
        background-image:           -webkit-gradient(linear, to left #{$startFrom}, to left bottom, from(#{$fromColor}),           to(#{$toColor})); /* Saf4+, Chrome */
        background-image:                                   -webkit-linear-gradient(#{$startFrom}, #{$fromColor},               #{$toColor}); /* Chrome 10+, Saf5.1+, iOS 5+ */
        background-image:                                      -moz-linear-gradient(#{$startFrom}, #{$fromColor},               #{$toColor}); /* FF3.6 */
        background-image:                                       -ms-linear-gradient(#{$startFrom}, #{$fromColor},               #{$toColor}); /* IE10 */
        background-image:                                        -o-linear-gradient(#{$startFrom}, #{$fromColor},               #{$toColor}); /* Opera 11.10+ */
        background-image:                                           linear-gradient(#{$startFrom}, #{$fromColor},               #{$toColor});
        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
    }
}