- pipeline: "Build & Deploy to Sandbox"
trigger_mode: "ON_EVERY_PUSH"
ref_name: "master"
ref_type: "BRANCH"
target_site_url: "https://sandbox.aspenrecreation.com"
fetch_all_refs: true
trigger_condition: "ALWAYS"
actions:
- action: "Execute: webpack build"
  type: "BUILD"
  working_directory: "/buddy/aspen"
  docker_image_name: "nystudio107/webpack-dev-base"
  docker_image_tag: "latest"
  execute_commands:
  - "cd buildchain"
  - "npm ci"
  - "npm run build"
  volume_mappings:
  - "/:/buddy/aspen"
  trigger_condition: "ALWAYS"
  shell: "BASH"
- action: "Execute: composer install"
  type: "BUILD"
  working_directory: "/buddy/aspen"
  docker_image_name: "nystudio107/php-dev-base"
  docker_image_tag: "latest"
  execute_commands:
  - "cd cms"
  - "composer install --no-scripts --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs"
  setup_commands:
  - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
  - "apt-get update && apt-get install -y git zip"
  - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
  - "# php ext pdo_mysql"
  - "docker-php-ext-install pdo_pgsql pgsql"
  volume_mappings:
  - "/:/buddy/aspen"
  trigger_condition: "ALWAYS"
  shell: "BASH"
- action: "Rsync files to production"
  type: "RSYNC"
  local_path: "cms/"
  remote_path: "$REMOTE_PROJECT_ROOT/deploy-cache"
  login: "$REMOTE_SSH_USER"
  host: "$REMOTE_SSH_HOST"
  port: "22"
  authentication_mode: "WORKSPACE_KEY"
  archive: true
  delete_extra_files: true
  recursive: true
  compress: true
  deployment_excludes:
  - "/.git/"
  trigger_condition: "ALWAYS"
- action: "Atomic deploy"
  type: "SSH_COMMAND"
  working_directory: "$REMOTE_PROJECT_ROOT"
  login: "$REMOTE_SSH_USER"
  host: "$REMOTE_SSH_HOST"
  port: "22"
  authentication_mode: "WORKSPACE_KEY"
  commands:
  - "if [ -d \"releases/$BUDDY_EXECUTION_REVISION\" ] && [ \"$BUDDY_EXECUTION_REFRESH\" = \"true\" ];"
  - "then"
  - " echo \"Removing: releases/$BUDDY_EXECUTION_REVISION\""
  - " rm -rf releases/$BUDDY_EXECUTION_REVISION;"
  - "fi"
  - "if [ ! -d \"releases/$BUDDY_EXECUTION_REVISION\" ];"
  - "then"
  - " echo \"Creating: releases/$BUDDY_EXECUTION_REVISION\""
  - " cp -dR deploy-cache releases/$BUDDY_EXECUTION_REVISION;"
  - "fi"
  - "echo \"Creating: persistent directories\""
  - "mkdir -p storage"
  - "echo \"Symlinking: persistent files & directories\""
  - "ln -nfs $REMOTE_PROJECT_ROOT/.env $REMOTE_PROJECT_ROOT/releases/$BUDDY_EXECUTION_REVISION"
  - "ln -nfs $REMOTE_PROJECT_ROOT/storage $REMOTE_PROJECT_ROOT/releases/$BUDDY_EXECUTION_REVISION"
  - "ln -nfs $REMOTE_PROJECT_ROOT/transcoder $REMOTE_PROJECT_ROOT/releases/$BUDDY_EXECUTION_REVISION/web"
  - "echo \"Linking current to revision: $BUDDY_EXECUTION_REVISION\""
  - "rm -rf current"
  - "ln -s releases/$BUDDY_EXECUTION_REVISION current"
  - "echo \"Removing old releases\""
  - "cd releases && ls -t | tail -n +11 | xargs rm -rf"
  trigger_condition: "ALWAYS"
  run_as_script: true
  shell: "BASH"
- action: "Prep Craft CMS"
  type: "SSH_COMMAND"
  working_directory: "$REMOTE_PROJECT_ROOT/current"
  login: "$REMOTE_SSH_USER"
  host: "$REMOTE_SSH_HOST"
  port: "22"
  authentication_mode: "WORKSPACE_KEY"
  commands:
  - "# Ensure the craft script is executable"
  - "chmod a+x craft"
  - "# Restart our long running queue listener process"
  - "#echo \"\" | sudo -S supervisorctl restart all"
  - "# Backup the database just in case any migrations or Project Config changes have issues"
  - "./craft backup/db"
  - "# Run pending migrations, sync project config, and clear caches"
  - "./craft migrate/all"
  - "./craft project-config/sync"
  - "./craft clear-caches/all"
  trigger_condition: "ALWAYS"
  run_as_script: true
  shell: "BASH"
variables:
- key: "PROJECT_SHORTNAME"
  value: "aspen"
- key: "PROJECT_URL"
  value: "https://sandbox.aspenrecreation.com"
- key: "REMOTE_PROJECT_ROOT"
  value: "/home/forge/sandbox.aspenrecreation.com"
- key: "REMOTE_SSH_HOST"
  value: "159.65.232.85"
- key: "REMOTE_SSH_USER"
  value: "forge"
