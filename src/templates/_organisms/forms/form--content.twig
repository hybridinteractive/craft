{% set form = block.form %}
    <noscript>
        <div class="bg-secondary-500 border px-8 py-4 mx-4 relative" role="alert">
            <div class="block text-white-90 font-primary font-medium my-4">
                Our forms use Javascript to operate. If you're seeing this message instead of the form, please re-enable Javascript in your browser.
            </div>
        </div>
    </noscript>

	<style>
		.required::after {
			content: "*";
			color: #F42E4B;
			margin-left: 5px;
			margin-top: 0px;
			line-height: 0;
			font-size: 1.2em;
		}
	</style>

{{ form.renderTag({class: "w-full"}) }}

{# Set styling for Ajax responses #}
<script>
    var form = document.querySelector('[data-id="{{ form.anchor }}"]');
    if (form) {
        form.addEventListener("freeform-ready", function (event) {
        var ntpform = event.target.freeform;
            ntpform.setOption("errorClassBanner", ["bg-secondary-500", "border", "border-secondary-500", "text-white-100", "px-4", "py-0", "relative", "mb-4"]);
            ntpform.setOption("errorClassList", ["errors", "text-secondary-500", "text-xs", "italic", "my-0", "list-none"]);
            ntpform.setOption("errorClassField", ["border-secondary-500"]);
            ntpform.setOption("successClassBanner", ["bg-primary-400", "border", "border-primary-500", "text-white-100", "px-4", "py-4", "relative", "mb-4"]);
            ntpform.setOption('successBannerMessage', 'Your form submission has been sucessful, the NTP will be in touch soon.');
        })
    }
</script>

{# Render tabs for pages #}
{% if form.pages|length > 1 %}
    <ul class="flex border-b">
        {% for page in form.pages %}
            <li class="mr-1">
                <a class="{{ form.currentPage.index == page.index ? 'bg-white inline-block border-l border-t border-r rounded-t py-2 px-4 text-blue-700 font-semibold' : 'bg-white inline-block py-2 px-4 text-gray-400 font-semibold disabled' }}">{{ page.label }}</a>
            </li>
        {% endfor %}
    </ul>
{% endif %}

{# Render errors #}
{% if form.hasErrors %}
    <div class="bg-secondary-500 border text-white-90 px-8 py-4 mx-4 relative" role="alert">
        <div class="block text-white-90 font-primary font-medium my-4">{{ "There's an error with your submission, please review any errors highlighted in red and try again."|t('freeform') }}</div>
        {% if form.errors|length %}
            <ul class="mb-0">
                {% for error in form.errors %}
                    <li>{{ error }}</li>
                {% endfor %}
            </ul>
        {% endif %}
    </div>
{% endif %}

{# Define standard field classes #}
{% set standardFieldClasses = "appearance-none block w-full bg-gray-100 text-gray-700 border border-gray-200 py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-primary-300" %}
{% set selectFieldClasses = "block appearance-none w-full bg-gray-100 border border-gray-200 text-gray-700 py-3 px-4 pr-8 leading-tight focus:outline-none focus:bg-white focus:border-primary-300" %}
{% set checkboxFieldClasses = "bg-gray-100 text-gray-700 border border-gray-200 py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-primary-300" %}
{% set fileFieldClasses = "appearance-none block w-full text-gray-700 py-3 px-4 leading-tight" %}
{% set tableFieldClasses = "appearance-none w-full text-gray-700 py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" %}
{% set signatureFieldClasses = "bg-gray-200 hover:bg-gray-400 text-black font-normal py-1 px-2 mr-1" %}
{% set standardLabelsClasses = "tracking-wide text-gray-700 text-xs font-bold mb-2" %}

{# Render form rows #}
{% for row in form %}
    <div class="flex flex-wrap -mx-3 sm:px-4 {{ form.customAttributes.rowClass }}">
        {% for field in row %}

            {# Calculate column class based on columns count #}
            {% set columnCount = row|length %}
            {% set columnClass = "w-full px-3 mb-6 md:mb-0" %}
            {% set columnClass = columnClass ~ form.customAttributes.columnClass %}

            {% if columnCount > 1 %}
                {% set columnClass = columnClass ~ " md:w-1/" ~ columnCount ~ " lg:w-1/" ~ columnCount ~ " xl:w-1/" ~ columnCount %}
            {% else %}
                {% set columnClass = columnClass ~ " md:w-full lg:w-full xl:w-full" %}
            {% endif %}

            {# Set a custom column class for the submit button #}
            {% if field.type == "submit" %}
                {% set columnClass = columnClass ~ " text-" ~ field.position %}
            {% endif %}

            {# Set field class based on field type #}
            {% set fieldClass = standardFieldClasses %}

            {%- switch field.type -%}
                {%- case "select" -%}
                    {%- set fieldClass = selectFieldClasses -%}
                {%- case "checkbox" -%}
                    {%- set fieldClass = checkboxFieldClasses -%}
                {%- case "mailing_list" -%}
                    {%- set fieldClass = checkboxFieldClasses -%}
                {%- case "file" -%}
                    {%- set fieldClass = fileFieldClasses -%}
                {%- case "table" -%}
                    {%- set fieldClass = tableFieldClasses -%}
                {%- case "signature" -%}
                    {%- set fieldClass = signatureFieldClasses -%}
            {%- endswitch -%}

            {% set fieldClass = fieldClass ~ (field.hasErrors ? " border-red-500") %}

            {# Set label class #}
            {% set labelClass = standardLabelsClasses ~ " block uppercase  mt-6" %}
            {% set labelClass = labelClass ~ (field.required ? " required" : "") %}

            {# Set error class #}
            {% set errorClass = "text-red-500 text-xs italic list-none mt-0" %}

            {# Set instructions class #}
            {% set instructionClass = "text-gray-600 text-xs italic" %}

            <div class="main-column-class {{ columnClass }}"{{ field.rulesHtmlData }} style="overflow: hidden;">
                {% if field.type == "checkbox_group" %}

                    {{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

                    {% for index, option in field.options %}
                        <div>
                            <input type="checkbox"
									name="{{ field.handle }}[]"
                                	value="{{ option.value }}"
                                	id="{{ field.idAttribute }}-{{ index }}"
                                	class="form-check-input{{ field.hasErrors ? " border-red-500" }}"
                                    {{ option.checked ? "checked" : "" }}
                            />

                            <label class="form-check-label text-base pl-2" for="{{ field.idAttribute }}-{{ index }}">
                                {{ option.label|t|raw }}
                            </label>
                        </div>
                    {% endfor %}

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors({ errorClass: errorClass }) }}

                {% elseif field.type == "radio_group" %}

                    {{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

                    {% for index, option in field.options %}
                        <div>
                            <input type="radio"
                                   name="{{ field.handle }}"
                                   value="{{ option.value }}"
                                   id="{{ field.idAttribute }}-{{ index }}"
                                   class="form-check-input{{ field.hasErrors ? " border-red-500" }}"
                                    {{ option.checked ? "checked" : "" }}
                            />
                            <label class="form-check-label text-base" for="{{ field.idAttribute }}-{{ index }}">
                                {{ option.label|t|raw }}
                            </label>
                        </div>
                    {% endfor %}

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors() }}

                {% elseif field.type == "dynamic_recipients" and (field.showAsRadio or field.showAsCheckboxes) %}

                    {{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

                    {{ field.oneLine ? "<div>"|raw }}

                    {% for index, option in field.options %}
                        <div class="form-check{{ field.oneLine ? " form-check-inline" }}">
                            <input type="{{ field.showAsRadio ? "radio" : "checkbox" }}"
                                   name="{{ field.handle }}[]"
                                   value="{{ loop.index0 }}"
                                   class="form-check-input"
                                   id="{{ field.idAttribute }}-{{ index }}"
                                    {{ option.checked ? "checked" : "" }}
                            />

                            <label class="form-check-label text-base" for="{{ field.idAttribute }}-{{ index }}">
                                {{ option.label|t|raw }}
                            </label>
                        </div>
                    {% endfor %}

                    {{ field.oneLine ? "</div>"|raw }}

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors() }}

                {% elseif field.type == "dynamic_recipients" and (field.showAsSelect) %}

                    {{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

                    <div class="relative">
                        <select name="{{ field.handle }}" id="{{ field.idAttribute }}" class="{{ fieldClass }}">
                        {% for index, option in field.options %}
                            <option value="{{ loop.index0 }}"{{ option.checked ? "selected" : "" }}>{{ option.label|t|raw }}</option>
                        {% endfor %}
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                        </div>
                    </div>

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors() }}

                {% elseif field.type == "select" %}

                    {{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

                    <div class="relative">
                        <select name="{{ field.handle }}" id="{{ field.idAttribute }}" class="{{ fieldClass }}">
                        {% for option in field.options %}
                            <option value="{{ option.value }}"{{ option.checked ? "selected" : "" }}>{{ option.label|t|raw }}</option>
                        {% endfor %}
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                        </div>
                    </div>

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors() }}

                {% elseif field.type in ["checkbox", "mailing_list"] %}

				{{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

					<div>
						<input type="checkbox"
								name="{{ field.handle }}"
								value="{{ field.value }}"
								id="{{ field.idAttribute }}"
								class="form-check-input{{ field.hasErrors ? " border-red-500" }}"
						/>
                            <label class="form-check-label text-base " for="{{ field.idAttribute }}">
                                {{ field.label|t|raw }}
                            </label>
                        </div>

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors({ errorClass: errorClass }) }}

                {% elseif field.type == "submit" %}

                    {{ field.render({ class: "my-4 px-6 py-2 text-sm uppercase font-semibold text-white-100 rounded-full bg-primary-500 mr-2 hover:bg-primary-400 focus:bg-secondary-500" }) }}

                {% elseif field.type == "table" %}

                    {{ field.render({
                        class: fieldClass,
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        instructionsBelowField: true,
                        errorClass: errorClass,
                        addButtonLabel: "Add +",
                        addButtonClass: "bg-primary-500 hover:bg-primay-400 text-white-100 rounded-full uppercase font-semibold hover:bg-primary-400 focus:bg-secondary-500 py-2 px-6 m-4",
                        removeButtonLabel: "x",
                        removeButtonClass: "bg-primary-500 hover:bg-primary-400 text-white-100 font-normal rounded-full uppercase font-semibold py-2 px-4 ml-2",
                        tableTextInputClass: standardFieldClasses ~ " my-2",
                        tableSelectInputClass: selectFieldClasses,
                        tableCheckboxInputClass: checkboxFieldClasses ~ " m-1",
                        tableLabelsClass: standardLabelsClasses
                    }) }}

                {% elseif field.type == "html" %}

                <div>
                {{ field.valueAsString|raw }}
                </div>


                {% elseif field.type == "textarea" %}

                {{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

                <div>
                    <textarea type="{{ field.type }}"
                                name="{{ field.handle }}"
                                value="{{ field.valueAsString }}"
                                id="{{ field.idAttribute }}"
                                rows="{{ field.rows }}"
                                class="{{ standardFieldClasses }} {{ field.hasErrors ? " border-red-500" }}"
                        />{{ field.placeholder }}</textarea>
                    </div>

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors({ errorClass: errorClass }) }}

                {% else %}

					{{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

					<div>
						<input type="{{ field.type }}"
								name="{{ field.handle }}"
								value="{{ field.valueAsString }}"
								id="{{ field.idAttribute }}"
								placeholder="{{ field.placeholder }}"
								class="{{ standardFieldClasses }} {{ field.hasErrors ? " border-red-500" }}"
						/>
                    </div>

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors({ errorClass: errorClass }) }}

                {% endif %}
            </div>
        {% endfor %}
    </div>
{% endfor %}

{{ form.renderClosingTag }}